{"version":3,"file":"static/js/750.68ecee9b.chunk.js","mappings":"yJACA,SAAgB,QAAU,yBAAyB,KAAO,sBAAsB,UAAY,2BAA2B,eAAiB,gCAAgC,SAAW,2B,kCCAnL,SAAgB,QAAU,yBAAyB,WAAa,4BAA4B,SAAW,0BAA0B,IAAM,sBCAvI,GAAgB,KAAO,mBAAmB,QAAU,sBAAsB,UAAY,wBAAwB,QAAU,uB,aCsBxH,QAlBA,SAAcA,GAEZ,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEC,QAAQC,UACxBC,EAAAA,EAAAA,MAAA,OAAKJ,UAAWC,EAAEI,KAAKF,SAAA,CACpBL,EAAMQ,IACPP,EAAAA,EAAAA,KAAA,OAAAI,UACEJ,EAAAA,EAAAA,KAAA,OAAKQ,IAAKT,EAAMU,SAAUC,IAAI,WAEhCL,EAAAA,EAAAA,MAAA,OAAKJ,UAAWC,EAAES,QAAQP,SAAA,EACxBJ,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAEU,UAAUR,SAAEL,EAAMc,WAClCb,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAEY,QAAQV,SAAEL,EAAMgB,mBAK/C,E,cCiBA,MAeMC,GAAsBC,E,QAAAA,GAAU,CAAEC,KAAM,yBAAlBD,EAfJlB,IAEpBM,EAAAA,EAAAA,MAAA,QAAMc,SAAUpB,EAAMqB,aAAahB,SAAA,EACjCJ,EAAAA,EAAAA,KAACqB,EAAAA,EAAK,CACJC,SAAU,CAACC,EAAAA,IAAUC,EAAAA,EAAAA,IAAiB,KAAKC,EAAAA,EAAAA,IAAiB,KAC5DC,UAAWC,EAAAA,EACX1B,UAAWC,EAAE0B,SACbC,YAAY,aACZC,KAAK,iBAEP9B,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAE6B,IAAI3B,SAAC,kBAShC,EA9CA,SAAiBL,GAEf,IAIIiC,EACJ,IAAIjC,EAAMkC,OAAOC,UAAUC,KAAKC,IAC9BpC,EAAAA,EAAAA,KAACqC,EAAI,CACHxB,QAASuB,EAAEvB,QAEXE,UAAWqB,EAAErB,UACbN,SAAU2B,EAAE3B,UAFP2B,EAAE7B,MAMX,OACEF,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEJ,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAEoC,WAAWlC,SAAC,cAC7BJ,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEC,QAAQC,UACxBJ,EAAAA,EAAAA,KAACgB,EAAmB,CAACG,SAlBVoB,IACfxC,EAAMyC,QAAQD,EAAOE,YAAY,OAmB/BzC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAE+B,MAAM7B,SAAE4B,MAGhC,ECdA,MACA,GADyBU,EAAAA,EAAAA,KAfFC,IACd,CACLV,MAAOU,EAAMC,YAAYX,MACzBQ,YAAaE,EAAMC,YAAYH,gBAITI,IACjB,CACLL,QAAUC,IACRI,GAASC,EAAAA,EAAAA,IAAqBL,GAAa,KAKxBC,CAA6CK,G,wDCrBtE,GAAgB,QAAU,6BAA6B,KAAO,0BAA0B,UAAY,+BAA+B,eAAiB,oCAAoC,SAAW,+B,mECGnM,MC2CA,EA5CgChD,IAE9B,IAAKiD,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,IAClCC,EAAQC,IAAaF,EAAAA,EAAAA,UAASnD,EAAMoD,SAEzCE,EAAAA,EAAAA,YAAU,KACRD,EAAUrD,EAAMoD,OAAO,GACtB,CAACpD,EAAMoD,SAcV,OACE9C,EAAAA,EAAAA,MAAA,OAAKJ,UAAWC,EAAEiD,OAAO/C,SAAA,EACrB4C,IACAhD,EAAAA,EAAAA,KAAA,OAAAI,UACEJ,EAAAA,EAAAA,KAAA,QAAMsD,cAhBWC,KACvBN,GAAY,EAAK,EAe2B7C,SACnCL,EAAMoD,QAAU,wBAItBH,IACChD,EAAAA,EAAAA,KAAA,OAAAI,UACEJ,EAAAA,EAAAA,KAAA,SACEwD,WAAW,EACXC,SAjBcC,IACtBN,EAAUM,EAAEC,cAAcC,MAAM,EAiBxBC,OAvBiBC,KACzBb,GAAY,GACZlD,EAAMgE,aAAaZ,EAAO,EAsBlBS,MAAOT,QAIT,ECFV,QAlCA,SAAqBpD,GACnB,OAAKA,EAAMiE,SAIT3D,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEJ,EAAAA,EAAAA,KAAA,OAAKQ,IAAKyD,EAAWvD,IAAI,SAAST,UAAWC,EAAEgE,kBAC/C7D,EAAAA,EAAAA,MAAA,OAAKJ,UAAWC,EAAEiE,QAAQ/D,SAAA,EACxBJ,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEkE,MAAMhE,UACtBJ,EAAAA,EAAAA,KAAA,OAAKQ,KAAKT,EAAMiE,QAAQK,OAAOC,MAAgBC,GAAuB7D,IAAI,YAAYT,UAAWC,EAAEsE,cAErGnE,EAAAA,EAAAA,MAAA,OAAKJ,UAAWC,EAAEuE,UAAUrE,SAAA,EAC1BJ,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAEI,KAAKF,SAAEL,EAAMiE,QAAQU,YACrC1E,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAEiD,OAAO/C,UAACJ,EAAAA,EAAAA,KAAC2E,EAAsB,IAAK5E,OAEpDM,EAAAA,EAAAA,MAAA,KAAGJ,UAAWC,EAAEI,KAAKF,SAAA,EACnBJ,EAAAA,EAAAA,KAAA,KAAGC,UAAU,UAASG,SAAC,YAAYL,EAAMiE,QAAQY,YAGnDvE,EAAAA,EAAAA,MAAA,KAAGJ,UAAWC,EAAEI,KAAKF,SAAA,EACnBJ,EAAAA,EAAAA,KAAA,KAAGC,UAAU,UAASG,SAAC,uBAAuB,IAC7CL,EAAMiE,QAAQa,eACd9E,EAAMiE,QAAQc,8BAEjBzE,EAAAA,EAAAA,MAAA,KAAG0E,KAAK,MAAM9E,UAAWC,EAAEI,KAAKF,SAAA,EAC9BJ,EAAAA,EAAAA,KAAA,KAAGC,UAAU,UAASG,SAAC,eACtBL,EAAMiE,QAAQgB,SAASC,qBAxBzBjF,EAAAA,EAAAA,KAACkF,EAAAA,EAAS,GA8BrB,ECzBA,QATA,SAAiBnF,GAEf,OACEM,EAAAA,EAAAA,MAAA,OAAKJ,UAAWC,EAAEC,QAAQC,SAAA,EACxBJ,EAAAA,EAAAA,KAACmF,EAAW,IAAKpF,KACjBC,EAAAA,EAAAA,KAACoF,EAAgB,MAGvB,E,wBC0CA,SAAe1C,EAAAA,EAAAA,KAPQC,IAAK,CAC1BqB,QAASrB,EAAMC,YAAYoB,QAC3Bb,OAAQR,EAAMC,YAAYO,OAC1BkC,iBAAkB1C,EAAM2C,KAAKC,OAC7BC,OAAQ7C,EAAM2C,KAAKE,UAGmB,CACtCC,eAAc,IACdC,UAAS,KACT3B,aACF,MAJA,EA5CA,SAA0BhE,GACxB,IAAI,OAAEwF,IAAWI,EAAAA,EAAAA,KAuBjB,OAtBKJ,IACHA,EAASxF,EAAMsF,mBAIjBhC,EAAAA,EAAAA,YAAU,KAOJkC,GACFK,EAAAA,EACGC,IAAI,wDAA0DN,GAC9DO,MAAMC,IACLhG,EAAM0F,eAAeM,EAASC,MAC9BjG,EAAM2F,UAAUH,EAAO,GAG7B,GACC,CAACA,IACCxF,EAAMyF,QAETxF,EAAAA,EAAAA,KAAA,OAAAI,UACEJ,EAAAA,EAAAA,KAACiG,EAAO,IACFlG,EACJiE,QAASjE,EAAMiE,QACfb,OAAQpD,EAAMoD,OACdY,aAAchE,EAAMgE,kBAPA/D,EAAAA,EAAAA,KAACkG,EAAAA,GAAQ,CAACC,GAAG,UAWzC,G","sources":["webpack://reacticz/./src/components/Profile/Profile.module.css?b512","webpack://reacticz/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://reacticz/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://reacticz/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Profile_wrapper__erqC2\",\"item\":\"Profile_item__SkOvN\",\"info_prof\":\"Profile_info_prof__1DbDU\",\"banner_content\":\"Profile_banner_content__xgfv2\",\"img_prof\":\"Profile_img_prof__wfLpP\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MyPosts_content__BI6+j\",\"postheader\":\"MyPosts_postheader__u8GKa\",\"textarea\":\"MyPosts_textarea__6xwE8\",\"btn\":\"MyPosts_btn__i92-Y\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__OoD9B\",\"counter\":\"Post_counter__yfAND\",\"item_text\":\"Post_item_text__M2OAs\",\"item_do\":\"Post_item_do__KO95V\"};","import s from \"./Post.module.css\";\r\n// import postimg from \"../../../../postimg.jpg\";\r\n\r\n\r\n\r\nfunction Post(props) {\r\n  // <Posts CountLike=\"Like\" />;\r\n  return (\r\n    <div className={s.content}>\r\n      <div className={s.item}>\r\n        {props.id}\r\n        <div>\r\n          <img src={props.photoUrl} alt=\"xxx\" />\r\n        </div>\r\n        <div className={s.counter}>\r\n          <p className={s.item_text}>{props.message}</p>\r\n          <button className={s.item_do}>{props.CountLike}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import {\r\n  required,\r\n  maxLengthCreator,\r\n  minLengthCreator,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nfunction MyPosts(props) {\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  let postsElement = \r\n  [...props.posts].reverse().map((p) => (\r\n    <Post\r\n      message={p.message}\r\n      key={p.id}\r\n      CountLike={p.CountLike}\r\n      photoUrl={p.photoUrl}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <h3 className={s.postheader}>My posts</h3>\r\n      <div className={s.content}>\r\n        <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      </div>\r\n      <div className={s.posts}>{postsElement}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        validate={[required, maxLengthCreator(60), minLengthCreator(10)]}\r\n        component={Textarea}\r\n        className={s.textarea}\r\n        placeholder=\"write smth\"\r\n        name=\"newPostText\"\r\n      />\r\n      <button className={s.btn}>Add Post</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(\r\n  AddNewPostForm\r\n);\r\n\r\nexport default MyPosts;\r\n","import {\r\n  \r\n  addPostActionCreator,\r\n} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ProfileInfo_wrapper__5+FGy\",\"item\":\"ProfileInfo_item__LfrLF\",\"info_prof\":\"ProfileInfo_info_prof__3-CKb\",\"banner_content\":\"ProfileInfo_banner_content__UapXL\",\"img_prof\":\"ProfileInfo_img_prof__l+FnD\"};","import React from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\n\r\n\r\nconst ProfileStatus = (props) => {\r\n  const [localState, setLocalState] = React.useState({\r\n    editMode: false,\r\n    status: props.status,\r\n  });\r\n  const activateEditMode = () => {\r\n    setLocalState({ ...localState, editMode: true });\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setLocalState({ ...localState, editMode: false });\r\n    props.updateStatus(localState.status);\r\n  };\r\n\r\n  const onStatusChange = (event) => {\r\n    setLocalState({ ...localState, status: event.currentTarget.value });\r\n    console.log(event.currentTarget.value);\r\n    props.updateStatus(localState.status);\r\n  };\r\n\r\n  return (\r\n    <div className={s.status}>\r\n      {!localState.editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>{props.status || \"Change the status\"}</span>\r\n        </div>\r\n      )}\r\n      {localState.editMode && (\r\n        <div>\r\n          <input\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            value={localState.status}\r\n            onChange={onStatusChange}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatus;\r\n\r\n// import React from \"react\";\r\n\r\n// class ProfileStatus extends React.Component {\r\n  \r\n//   state = {\r\n//     editMode: false,\r\n//     status: this.props.status\r\n//   };\r\n  \r\n//   activateEditMode() {\r\n//     this.setState({\r\n//       editMode: true,\r\n//     });\r\n//   }\r\n//   deActivateEditMode() {\r\n\r\n//     this.setState({\r\n//       editMode: false,\r\n//     });\r\n//     this.props.updateStatus(this.state.status)\r\n    \r\n//   }\r\n\r\n//   onStatusChange = (e) => {\r\n//     this.setState({\r\n//       status: e.currentTarget.value\r\n//     })\r\n//   }\r\n  \r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         {!this.state.editMode && (\r\n//           <div>\r\n//             <span onDoubleClick={this.activateEditMode}>\r\n//               {this.props.status}\r\n//             </span>\r\n//           </div>\r\n//         )}\r\n//         {this.state.editMode && (\r\n//           <div>\r\n//             <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deActivateEditMode} value={this.state.status} />\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default ProfileStatus;\r\n\r\n\r\n// \r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div className={s.status}>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"Change the status\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            autoFocus={true}\r\n            onChange={onStatusChange}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import userPhoto from \"../../../userPhoto.jpg\";\r\nimport s from './ProfileInfo.module.css'\r\nimport bannerINO from \"../../../bannerx.jpg\";\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nfunction ProfileInfo(props) {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div>\r\n      <img src={bannerINO} alt=\"banner\" className={s.banner_content} />\r\n      <div className={s.wrapper}>\r\n        <div className={s.photo}>\r\n          <img src={props.profile.photos.large != null ? userPhoto : userPhoto} alt=\"vrum-vrum\" className={s.img_prof} />\r\n        </div>\r\n        <div className={s.info_prof}>\r\n          <p className={s.item}>{props.profile.fullName}</p>\r\n          <p className={s.status}><ProfileStatusWithHooks {...props}/></p>\r\n          \r\n          <p className={s.item}>\r\n            <b className=\"keyword\">About: </b>{props.profile.aboutMe}\r\n            \r\n          </p>\r\n          <p className={s.item}>\r\n            <b className=\"keyword\">Looking for a job:</b>{\" \"}\r\n            {props.profile.lookingForAJob}\r\n            {props.profile.lookingForAJobDescription}\r\n          </p>\r\n          <a href=\" #!\" className={s.item}>\r\n            <b className=\"keyword\">Contacts: </b>\r\n            {props.profile.contacts.website}\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import { Suspense } from \"react\";\r\nimport s from \"../Profile/Profile.module.css\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nfunction Profile(props) {\r\n  \r\n  return (\r\n    <div className={s.content}>\r\n      <ProfileInfo {...props}  />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n}\r\nexport default Profile;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport axios from \"axios\";\r\nimport { Navigate, useParams } from \"react-router-dom\";\r\nimport {\r\n  setUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n} from \"./../../redux/profile-reducer\";\r\n\r\nfunction ProfileContainer(props) {\r\n  let { userId } = useParams();\r\n  if (!userId) {\r\n    userId = props.authorizedUserId;\r\n    \r\n  }\r\n\r\n  useEffect(() => {\r\n    // const getUser = async () => {\r\n    //   const user = await profileAPI.getProfile(userId)\r\n    //   props.setUserProfile(user.data)\r\n    //   props.getStatus(userId)\r\n    // } // async await\r\n\r\n    if (userId) {\r\n      axios\r\n        .get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId)\r\n        .then((response) => {\r\n          props.setUserProfile(response.data);\r\n          props.getStatus(userId);\r\n        });\r\n      // getUser()\r\n    }\r\n  }, [userId]);\r\n  if (!props.isAuth) return <Navigate to=\"/login\" />;\r\n  return (\r\n    <div>\r\n      <Profile\r\n        {...props}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  setUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n})(ProfileContainer);\r\n"],"names":["props","_jsx","className","s","content","children","_jsxs","item","id","src","photoUrl","alt","counter","item_text","message","item_do","CountLike","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","maxLengthCreator","minLengthCreator","component","Textarea","textarea","placeholder","name","btn","postsElement","posts","reverse","map","p","Post","postheader","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","editMode","setEditMode","useState","status","setStatus","useEffect","onDoubleClick","activateEditMode","autoFocus","onChange","e","currentTarget","value","onBlur","deactivateEditMode","updateStatus","profile","bannerINO","banner_content","wrapper","photo","photos","large","userPhoto","img_prof","info_prof","fullName","ProfileStatusWithHooks","aboutMe","lookingForAJob","lookingForAJobDescription","href","contacts","website","Preloader","ProfileInfo","MyPostsContainer","authorizedUserId","auth","userId","isAuth","setUserProfile","getStatus","useParams","axios","get","then","response","data","Profile","Navigate","to"],"sourceRoot":""}