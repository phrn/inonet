{"version":3,"file":"static/js/32.ebe1a40e.chunk.js","mappings":"iKACA,SAAgB,KAAO,sBAAsB,WAAa,4BAA4B,YAAc,6BAA6B,SAAW,0BAA0B,KAAO,sBAAsB,UAAY,2BAA2B,KAAO,uB,uBCEjP,MAoBA,EApBoBA,IAClB,IAAIC,EAAgB,YAAcD,EAAME,GACpCC,EAAO,YAAcH,EAAME,GAC/B,OACEE,EAAAA,EAAAA,KAAA,OAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAEC,KAAKJ,SAAA,EACrBD,EAAAA,EAAAA,KAACM,EAAAA,GAAO,CAACC,GAAIV,EAAcI,UACzBD,EAAAA,EAAAA,KAAA,OAAKQ,IAAKZ,EAAMa,SAAUC,IAAI,IAAIP,UAAWC,EAAEO,eAEjDX,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAEQ,SAAW,IAAMR,EAAES,OAAOZ,UAC1CC,EAAAA,EAAAA,MAACI,EAAAA,GAAO,CAACC,GAAIR,EAAKE,SAAA,EAChBD,EAAAA,EAAAA,KAAA,KAAGG,UAAWC,EAAEU,KAAKb,SAAEL,EAAMmB,QAC7Bf,EAAAA,EAAAA,KAAA,KAAGG,UAAWC,EAAEU,KAAKb,SAAEL,EAAMoB,mBAI/B,E,4CCqBV,MAcMC,GAAsBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,wBAAlBD,EAdJtB,IAEpBM,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAEgB,YAAaC,SAAUzB,EAAM0B,aAAarB,SAAA,EAC3DD,EAAAA,EAAAA,KAACuB,EAAAA,EAAK,CACJC,UAAWC,EAAAA,EACXC,SAAU,CAAEC,EAAAA,IAAUC,EAAAA,EAAAA,IAAiB,MAAMC,EAAAA,EAAAA,IAAiB,KAC9Dd,KAAK,iBACLe,YAAY,wBAEd9B,EAAAA,EAAAA,KAAA,UAAQG,UAAWC,EAAE2B,WAAW9B,SAAC,cAQvC,EAhDA,SAAiBL,GACf,IAAIoC,EAAQpC,EAAMoC,MAAMC,YACpBC,EAAiBtC,EAAMoC,MAAMC,YAAYE,KAAKC,IAChDpC,EAAAA,EAAAA,KAACqC,EAAU,CACTvC,GAAIsC,EAAEtC,GAENiB,KAAMqB,EAAErB,KACRC,QAASoB,EAAEpB,QACXP,SAAU2B,EAAE3B,UAHP2B,EAAEtC,MAYX,OANqBkC,EAAMM,eAMtB1C,EAAM2C,QAGTrC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAEoC,QAAQvC,SAAA,EACxBD,EAAAA,EAAAA,KAAA,OAAAC,SAAMiC,KACNlC,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACiB,EAAmB,CAACI,SAXRoB,IACnB7C,EAAM8C,YAAYD,EAAOH,eAAe,YAGhBtC,EAAAA,EAAAA,KAAC2C,EAAAA,GAAQ,CAACpC,GAAG,UAYzC,E,cCvBA,MAMA,GAAeqC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,KAdAb,IACd,CACLc,YAAad,EAAMc,YAAYb,YAC/BK,eAAgBN,EAAMc,YAAYR,eAClCC,OAAQP,EAAMe,KAAKR,WAIKS,IACnB,CACLN,YAAcJ,GAAmBU,GAASC,EAAAA,EAAAA,GAAmBX,QAIjE,CAAqEY,E","sources":["webpack://reacticz/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"msgs\":\"Dialogs_msgs__-kXWD\",\"btn_dialog\":\"Dialogs_btn_dialog__BD9RY\",\"form_dialog\":\"Dialogs_form_dialog__cx8he\",\"msgDescr\":\"Dialogs_msgDescr__AVXhu\",\"sent\":\"Dialogs_sent__eZtLA\",\"imgDialog\":\"Dialogs_imgDialog__y642e\",\"test\":\"Dialogs_test__x7woL\"};","import s from \"../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let pathToProfile = \"/profile/\" + props.id;\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div>\r\n      <div className={s.msgs}>\r\n        <NavLink to={pathToProfile}>\r\n          <img src={props.photoUrl} alt=\"x\" className={s.imgDialog} />\r\n        </NavLink>\r\n        <div className={s.msgDescr + \" \" + s.active}>\r\n          <NavLink to={path}>\r\n            <p className={s.sent}>{props.name}</p>\r\n            <p className={s.sent}>{props.message}</p>\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import { Navigate } from \"react-router-dom\";\r\nimport s from \"../Dialogs/Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, minLengthCreator, required } from \"../../utils/validators/validators\";\r\n\r\n\r\n\r\nfunction Dialogs(props) {\r\n  let state = props.state.dialogsData;\r\n  let dialogsElement = props.state.dialogsData.map((d) => (\r\n    <DialogItem\r\n      id={d.id}\r\n      key={d.id}\r\n      name={d.name}\r\n      message={d.message}\r\n      photoUrl={d.photoUrl}\r\n    />\r\n  ));\r\n  let newMessageBody = state.newMessageBody;\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  if (!props.isAuth) return <Navigate to=\"/login\" />;\r\n\r\n  return (\r\n    <div className={s.content}>\r\n      <div>{dialogsElement}</div>\r\n      <div>\r\n        <div>\r\n          <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form className={s.form_dialog} onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={Textarea}\r\n        validate={[ required, maxLengthCreator(100), minLengthCreator(10) ]}\r\n        name=\"newMessageBody\"\r\n        placeholder=\"enter your message\"\r\n      />\r\n      <button className={s.btn_dialog}>Send</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(\r\n  AddMessageForm\r\n);\r\nexport default Dialogs;\r\n","import { compose } from \"redux\";\r\nimport {\r\n  sendMessageCreator\r\n} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage.dialogsData,\r\n    newMessageBody: state.dialogsPage.newMessageBody,\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => dispatch(sendMessageCreator(newMessageBody)),\r\n  };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(Dialogs);\r\n"],"names":["props","pathToProfile","id","path","_jsx","children","_jsxs","className","s","msgs","NavLink","to","src","photoUrl","alt","imgDialog","msgDescr","active","sent","name","message","AddMessageFormRedux","reduxForm","form","form_dialog","onSubmit","handleSubmit","Field","component","Textarea","validate","required","maxLengthCreator","minLengthCreator","placeholder","btn_dialog","state","dialogsData","dialogsElement","map","d","DialogItem","newMessageBody","isAuth","content","values","sendMessage","Navigate","compose","connect","dialogsPage","auth","dispatch","sendMessageCreator","Dialogs"],"sourceRoot":""}